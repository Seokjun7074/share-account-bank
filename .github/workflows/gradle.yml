# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Make application.yml
      run: |
        cd ./business-server/src/main/resources
        touch ./application.yml  

        echo "${{ secrets.SECRET_YML }}" >> ./application.yml
      shell: bash
      
    - name: Build with Gradle
      run: |
       cd ./business-server
       ./gradlew build
       
    - name: Dockerhub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Docker Image Build
      run: |
        cd ./business-server
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BEND_PROJECT_NAME }} .
      
    - name: DockerHub Push
      run: |
        cd ./business-server
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BEND_PROJECT_NAME }}

    - name: Application Run
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{secrets.SSH_URL}}
        username: ec2-user
        key: ${{ secrets.SSH_PEM_KEY }}

        script: |
          sudo docker kill ${{ secrets.BEND_PROJECT_NAME }}
          sudo docker rm -f ${{ secrets.BEND_PROJECT_NAME }}
          sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BEND_PROJECT_NAME }}
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BEND_PROJECT_NAME }}
          sudo docker run -p 8080:8080 \
          --name ${{ secrets.BEND_PROJECT_NAME }} \
          -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BEND_PROJECT_NAME}}
